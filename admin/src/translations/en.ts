const en = {
  plugin: {
    name: 'UI Navigation',
    section: {
      name: 'Navigation plugin',
      item: 'Configuration',
    },
  },
  header: {
    title: 'Navigation',
    description: 'Define your portal navigation',
    meta: 'ID: { id }, slug: { key }',
    action: {
      newItem: 'New Item',
      manage: 'Manage',
      collapseAll: 'Collapse All',
      expandAll: 'Expand All',
    },
  },
  submit: {
    cta: {
      cancel: 'Cancel',
      save: 'Save',
    },
  },
  empty: {
    description: 'Your navigation is empty',
    cta: 'Create first item',
  },
  popup: {
    navigation: {
      manage: {
        header: {
          LIST: 'All navigations',
          CREATE: 'New navigation',
          DELETE: 'Deleting',
          ERROR: 'Error',
          EDIT: 'Editing "{name}"',
        },
        button: {
          cancel: 'Cancel',
          delete: 'Delete',
          save: 'Save',
          edit: 'Edit',
          create: 'Create',
          goBack: 'Go back',
          purge: 'Clear read cache',
        },
        table: {
          id: 'Id',
          name: 'Name',
          locale: 'Locale versions',
          visibility: 'Visibility',
          hasSelected: '{count} entries selected',
        },
        footer: {
          button: {
            purge: 'Clear',
          },
        },
        purge: {
          header:
            'This action will clear API read cache. This will result in brief slowdown of reads for navigations below.',
        },
        delete: {
          header: 'Following navigations will be removed:',
        },
        error: {
          header: 'An error happened :(',
          message: 'An error happened while processing request.',
        },
        navigation: {
          visible: 'visible',
          hidden: 'hidden',
        },
      },
      form: {
        name: {
          label: 'Name',
          placeholder: "Navigations's name",
          validation: {
            name: {
              required: 'Name is required',
              tooShort: 'Name is too short',
              alreadyUsed: 'Name is already used',
            },
            visible: {
              required: 'Visibility is required',
            },
          },
        },
        visible: {
          label: 'Visibility',
          toggle: {
            visible: 'Visible',
            hidden: 'Hidden',
          },
        },
      },
    },
    item: {
      header: {
        view: 'View navigation item',
        edit: 'Edit navigation item',
        new: 'New navigation item',
      },
      form: {
        title: {
          label: 'Title',
          autoSync: {
            label: 'Read fields from related',
          },
          placeholder: 'Enter the item title or leave blank to pull from related entity',
        },
        uiRouterKey: {
          label: 'UI router key',
          placeholder: 'If empty, auto generated by "Title"',
        },
        uiRouter: {
          unableToRender:
            'Unable to render slug and/or UI Router Key because of not supported characters',
        },
        path: {
          label: 'URL',
          placeholder: 'Unique url part identifies this item',
          preview: 'Preview:',
        },
        externalPath: {
          label: 'External URL',
          placeholder: 'Link to the external source',
          validation: {
            type: 'This value is not a proper url.',
          },
        },
        menuAttached: {
          label: 'Attach to menu',
          value: {
            yes: 'Yes',
            no: 'No',
          },
        },
        type: {
          label: 'Navigation item type',
          internal: {
            label: 'Internal source',
          },
          external: {
            label: 'External source',
            description: 'Output path: {value}',
          },
          wrapper: {
            label: 'Wrapper element',
          },
        },
        audience: {
          label: 'Audience',
          placeholder: 'Select audience...',
          empty: 'There are no more audiences',
        },
        relatedSection: {
          label: 'Relation to',
        },
        relatedType: {
          label: 'Content Type',
          placeholder: 'Select content type...',
          empty: 'There are no content types to select',
        },
        related: {
          label: 'Entity',
          placeholder: 'Select entity...',
          empty: 'There are no more entities of "{ contentTypeName }" to select',
        },
        i18n: {
          locale: {
            label: 'Copy details from',
            placeholder: 'locale',
            button: 'Copy',
            error: {
              generic: 'Unable to copy item',
              unavailable: 'Locale version unavailable',
            },
          },
        },
        button: {
          create: 'Create item',
          update: 'Update item',
          restore: 'Restore item',
          remove: 'Remove',
          save: 'Save',
          cancel: 'Cancel',
        },
      },
    },
  },
  notification: {
    navigation: {
      submit: 'Navigation changes has been saved',
      error: 'Duplicate path: "{ path }" in parent: "{ parentTitle }" for { errorTitles } items',
      item: {
        relation: 'Entity relation does not exist!',
        status: {
          draft: 'draft',
          published: 'published',
        },
      },
    },
    error: {
      common: 'Error while processing request.',
      customField: {
        type: 'Unsupported type of custom field',
        media: {
          missing: 'Media input component is missing',
        },
      },
      item: {
        relation: 'Relations provided in some items are incorrect',
        slug: 'Unable to create valid UI Router Key(slug) from "{ query }". "{ result }" received',
      },
    },
  },
  pages: {
    auth: {
      noAccess: 'No access',
      not: {
        allowed: 'Oops! It seems like You do not have access to this page...',
      },
    },
    main: {
      search: {
        placeholder: 'Type to start searching...',
        subLabel: 'press ENTER to highlight next item',
      },
      header: {
        localization: {
          select: {
            placeholder: 'Select locale',
          },
        },
      },
    },
    settings: {
      title: 'Navigation settings',
      general: {
        title: 'General settings',
      },
      additional: {
        title: 'Additional settings',
      },
      customFields: {
        title: 'Custom fields settings',
      },
      nameField: {
        title: 'Content types settings',
      },
      restoring: {
        title: 'Restoring',
      },
      section: {
        title: 'Navigation Plugin',
        subtitle: 'Configuration',
      },
      header: {
        title: 'Navigation',
        description: 'Configure the navigation plugin',
      },
      form: {
        cascadeMenuAttached: {
          label: 'Cascade menu attached',
          hint: 'Disable if you don\'t want "Menu attached" to cascade on child items',
        },
        preferCustomContentTypes: {
          label: 'Prefer API Content Types',
          hint: 'Prefer if to use only api:: prefixed content types',
        },
        contentTypes: {
          label: 'Enable navigation for',
          placeholder: 'eg. Pages, Posts',
          hint: 'If none is selected, also none of the content types are enabled',
        },
        i18n: {
          label: 'i18n',
          hint: 'Enable internationalisation',
          hintMissingDefaultLocale: 'Default locale missing!',
        },
        allowedLevels: {
          label: 'Allowed levels',
          placeholder: 'eg. 2',
          hint: 'Maximum level for which you\'re able to mark item as "Menu attached"',
        },
        audience: {
          label: 'Audience',
          hint: 'Enable audience field',
        },
        nameField: {
          default: 'Default',
          label: 'Name fields',
          placeholder: 'Select at least one or leave empty to apply defaults',
          hint: 'If left empty name field is going to take following ordered fields: "title", "subject" and "name"',
          empty: "This content type doesn't have any string attributes",
        },
        populate: {
          label: 'Fields to populate',
          placeholder: 'Select at least one or leave empty to disable populating relation fields',
          hint: 'Selected relation fields will be populated inside API responses',
          empty: "This content type doesn't have any relation fields",
        },
        pathDefaultFields: {
          label: 'Path default fields',
          placeholder:
            'Select at least one or leave it empty to disable populating path field with attributes value',
          hint: 'Value of selected attribute will be a default value for internal path',
          empty: "This content type doesn't have any suitable attributes",
        },
        contentTypesSettings: {
          label: 'Content types',
          tooltip: 'Custom configuration per content type',
          initializationWarning: {
            title: 'Warning',
            content:
              "- Content Type hasn't yet been initialized. Initialize it first to be able to use in a Visual Editor.",
          },
        },
        customFields: {
          table: {
            confirmation: {
              header: 'Removing custom field',
              message:
                'This action will cause removing all custom fields values from navigation items.',
              confirm: 'Continue',
              error: 'An error ocurred while removing custom field',
            },
            header: {
              name: 'Name',
              label: 'Label',
              type: 'Type',
              required: 'Required',
            },
            footer: 'Create new custom field',
            edit: 'Edit custom field',
            enable: 'Enable custom field',
            disable: 'Disable custom field',
            remove: 'Remove custom field',
            required: 'required',
            notRequired: 'not required',
          },
          popup: {
            header: {
              edit: 'Edit custom field',
              new: 'Add new custom field',
            },
            name: {
              label: 'Custom field name',
              placeholder: 'example_name',
              description: 'Name of the custom field must be unique',
            },
            label: {
              label: 'Custom field label',
              placeholder: 'Example label',
              description: 'This label will be displayed on navigation item form',
            },
            type: {
              label: 'Custom field type',
              description: 'Type of the custom field, define how it will be displayed',
            },
            required: {
              label: 'Require field',
              description: 'Enabling this field will not change already exiting navigation items',
            },
            options: {
              label: 'Options for select input',
              description: 'Provide options separated by ";"',
            },
            multi: {
              label: 'Enable multiple options input',
              description: 'Allow single or multiple options selection',
            },
          },
        },
      },
      actions: {
        submit: 'Save configuration',
        restore: {
          label: 'Restore configuration',
          confirmation: {
            header: 'Do you want to continue?',
            confirm: 'Restore',
            description: 'Plugin config will be restored from plugins.js file.',
          },
          description:
            "Restoring the plugin configuration will cause it to be replaced with configuration saved inside 'plugins.js' file.",
        },
        restart: {
          label: 'Restart Strapi',
          alert: {
            title: 'Strapi requires restart',
            description:
              "You've made a configuration changes which requires your Strapi application to be restarted to take an effect. Do it manually or by using below trigger.",
            close: 'Discard',
            cancel: 'Cancel',
            reason: {
              I18N: 'Internationalization(i18n) changes will be applied.',
              GRAPH_QL: 'GraphQL changes will be applied.',
              I18N_NAVIGATIONS_PRUNE: 'Obsolete locale navigations will be removed.',
            },
          },
        },
        disableI18n: {
          confirmation: {
            header: 'Disabling Internationalization',
            confirm: 'I understand',
            description: {
              line1:
                'You are disabling Internationalization for Navigation. Navigations for locales different than default are not available for viewing and modifications via this plugin.',
              line2: 'You can choose to remove navigations for other locales.',
              line3: 'Remember! Removal is irreversible',
            },
          },
          prune: {
            label: 'Obsolete navigations',
            on: 'Remove',
            off: 'Keep',
          },
        },
      },
      notification: {
        fetch: {
          error: 'Failed to fetch configuration. Retrying...',
        },
        submit: {
          success: 'Config has been updated successfully',
          error: 'Config update has failed',
        },
        restore: {
          success: 'Config has been restored successfully',
          error: 'Config restore has failed',
        },
        restart: {
          success: 'Application has been restarted successfully',
          error: 'Failed to restart your application. Try to do it manually.',
        },
      },
    },
    view: {
      actions: {
        i18nCopyItems: {
          confirmation: {
            header: 'Confirmation',
            confirm: 'Copy',
            content: 'Do you want to copy navigations items?',
          },
        },
      },
    },
  },
  components: {
    toggle: {
      enabled: 'Enabled',
      disabled: 'Disabled',
    },
    navigationItem: {
      action: {
        newItem: 'Add nested item',
        edit: 'Edit',
        view: 'View',
        restore: 'Restore',
        remove: 'Remove',
      },
      badge: {
        removed: 'Removed',
        draft: 'Draft',
        published: 'Published',
      },
      related: {
        localeMissing: '(Locale version missing)',
      },
    },
    confirmation: {
      dialog: {
        button: {
          cancel: 'Cancel',
          confirm: 'Confirm',
        },
        description: 'Do you want to continue?',
        header: 'Confirmation',
      },
    },
    notAccessPage: {
      back: 'Back to homepage',
    },
  },
  view: {
    i18n: {
      fill: {
        option: '{locale} locale',
        cta: {
          header: 'or bootstrap',
          button: 'copy',
        },
      },
    },
  },
};

export default en;

export type EN = typeof en;
